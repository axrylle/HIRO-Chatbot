/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HIRO;
import java.awt.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author julius
 */
public class CHATBOT extends javax.swing.JFrame {
    // INITIATE STRING STATIC PARA MATAWAG SA LAHAT NG METHOD
    public static String answer;
    public static String ans;
    /**
     * Creates new form CHATBOT
     */
    public CHATBOT() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        screentext = new javax.swing.JTextArea();
        txtmsg = new javax.swing.JTextField();
        btnsend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panel1stQ = new javax.swing.JPanel();
        btnappointment = new javax.swing.JButton();
        btnlocation = new javax.swing.JButton();
        btnopenhours = new javax.swing.JButton();
        btndoctors = new javax.swing.JButton();
        btnkeyfacts = new javax.swing.JButton();
        paneldoctortype = new javax.swing.JPanel();
        btnneuro = new javax.swing.JButton();
        btnob = new javax.swing.JButton();
        btnpedia = new javax.swing.JButton();
        btnderma = new javax.swing.JButton();
        btngoback4 = new javax.swing.JButton();
        btnalldoctors = new javax.swing.JButton();
        panelcoughs = new javax.swing.JPanel();
        btndrycough = new javax.swing.JButton();
        btnproductivecough = new javax.swing.JButton();
        btnchronic = new javax.swing.JButton();
        btnwetcough = new javax.swing.JButton();
        btnbarkingcough = new javax.swing.JButton();
        btnwhoopingcough = new javax.swing.JButton();
        btngoback2 = new javax.swing.JButton();
        panelsickness = new javax.swing.JPanel();
        btncough = new javax.swing.JButton();
        btnfever = new javax.swing.JButton();
        btncold = new javax.swing.JButton();
        btngoback1 = new javax.swing.JButton();
        panelfever = new javax.swing.JPanel();
        btnacute = new javax.swing.JButton();
        btnfuo = new javax.swing.JButton();
        btnrecurrent = new javax.swing.JButton();
        btnlow = new javax.swing.JButton();
        btnpersistent = new javax.swing.JButton();
        btngoback3 = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        screentext.setColumns(20);
        screentext.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        screentext.setRows(5);
        screentext.setText("HIRO:    Hi! What can I do for you?\n");
        screentext.setRequestFocusEnabled(false);
        jScrollPane2.setViewportView(screentext);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 122, 450, 440));

        txtmsg.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        txtmsg.setText("Send a Message...");
        txtmsg.setToolTipText("");
        txtmsg.setName(""); // NOI18N
        txtmsg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtmsgFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmsgFocusLost(evt);
            }
        });
        txtmsg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtmsgMouseClicked(evt);
            }
        });
        txtmsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmsgActionPerformed(evt);
            }
        });
        jPanel1.add(txtmsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 450, 48));

        btnsend.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnsend.setText("Send");
        btnsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsendActionPerformed(evt);
            }
        });
        jPanel1.add(btnsend, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 570, 160, 46));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/baymaxeye.gif"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 400, 100));

        panel1stQ.setBackground(new java.awt.Color(255, 255, 255));
        panel1stQ.setLayout(null);

        btnappointment.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnappointment.setText("Set An Appointment");
        btnappointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnappointmentActionPerformed(evt);
            }
        });
        panel1stQ.add(btnappointment);
        btnappointment.setBounds(10, 20, 155, 52);

        btnlocation.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnlocation.setText("Location");
        btnlocation.setActionCommand("I'm okay, but there's something wrong");
        btnlocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlocationActionPerformed(evt);
            }
        });
        panel1stQ.add(btnlocation);
        btnlocation.setBounds(10, 230, 155, 52);

        btnopenhours.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnopenhours.setText("Opening Hours");
        btnopenhours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopenhoursActionPerformed(evt);
            }
        });
        panel1stQ.add(btnopenhours);
        btnopenhours.setBounds(10, 90, 155, 52);

        btndoctors.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btndoctors.setText("Our Doctors");
        btndoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndoctorsActionPerformed(evt);
            }
        });
        panel1stQ.add(btndoctors);
        btndoctors.setBounds(10, 160, 155, 52);

        btnkeyfacts.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnkeyfacts.setText("Key Facts");
        btnkeyfacts.setActionCommand("I'm okay, but there's something wrong");
        btnkeyfacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkeyfactsActionPerformed(evt);
            }
        });
        panel1stQ.add(btnkeyfacts);
        btnkeyfacts.setBounds(10, 300, 155, 52);

        jPanel1.add(panel1stQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 170, 400));
        panel1stQ.getAccessibleContext().setAccessibleName("");

        paneldoctortype.setBackground(new java.awt.Color(255, 255, 255));
        paneldoctortype.setLayout(null);

        btnneuro.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnneuro.setText("Neurologist");
        btnneuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnneuroActionPerformed(evt);
            }
        });
        paneldoctortype.add(btnneuro);
        btnneuro.setBounds(10, 70, 155, 40);

        btnob.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnob.setText("OB-GYN");
        btnob.setActionCommand("I'm okay, but there's something wrong");
        btnob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnobActionPerformed(evt);
            }
        });
        paneldoctortype.add(btnob);
        btnob.setBounds(10, 220, 155, 40);

        btnpedia.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnpedia.setText("Pediatrician");
        btnpedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpediaActionPerformed(evt);
            }
        });
        paneldoctortype.add(btnpedia);
        btnpedia.setBounds(10, 120, 155, 40);

        btnderma.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnderma.setText("Dermatologist");
        btnderma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndermaActionPerformed(evt);
            }
        });
        paneldoctortype.add(btnderma);
        btnderma.setBounds(10, 170, 155, 40);

        btngoback4.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btngoback4.setText("Go Back");
        btngoback4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngoback4ActionPerformed(evt);
            }
        });
        paneldoctortype.add(btngoback4);
        btngoback4.setBounds(10, 270, 155, 40);

        btnalldoctors.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnalldoctors.setText("All Doctors");
        btnalldoctors.setActionCommand("I'm okay, but there's something wrong");
        btnalldoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnalldoctorsActionPerformed(evt);
            }
        });
        paneldoctortype.add(btnalldoctors);
        btnalldoctors.setBounds(10, 20, 155, 40);

        jPanel1.add(paneldoctortype, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 170, 400));

        panelcoughs.setBackground(new java.awt.Color(255, 255, 255));
        panelcoughs.setEnabled(false);
        panelcoughs.setFocusable(false);
        panelcoughs.setLayout(null);

        btndrycough.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btndrycough.setText("Dry Cough");
        btndrycough.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndrycoughActionPerformed(evt);
            }
        });
        panelcoughs.add(btndrycough);
        btndrycough.setBounds(10, 20, 155, 40);

        btnproductivecough.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnproductivecough.setText("Productive Cough");
        btnproductivecough.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnproductivecoughActionPerformed(evt);
            }
        });
        panelcoughs.add(btnproductivecough);
        btnproductivecough.setBounds(10, 70, 155, 40);

        btnchronic.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnchronic.setText("Chronic Cough");
        btnchronic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchronicActionPerformed(evt);
            }
        });
        panelcoughs.add(btnchronic);
        btnchronic.setBounds(10, 270, 155, 40);

        btnwetcough.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnwetcough.setText("Wet Cough");
        btnwetcough.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnwetcoughActionPerformed(evt);
            }
        });
        panelcoughs.add(btnwetcough);
        btnwetcough.setBounds(10, 120, 155, 40);

        btnbarkingcough.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnbarkingcough.setText("Barking Cough");
        btnbarkingcough.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbarkingcoughActionPerformed(evt);
            }
        });
        panelcoughs.add(btnbarkingcough);
        btnbarkingcough.setBounds(10, 170, 155, 40);

        btnwhoopingcough.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnwhoopingcough.setText("Whooping Cough");
        btnwhoopingcough.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnwhoopingcoughActionPerformed(evt);
            }
        });
        panelcoughs.add(btnwhoopingcough);
        btnwhoopingcough.setBounds(10, 220, 155, 40);

        btngoback2.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btngoback2.setText("Go Back");
        btngoback2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngoback2ActionPerformed(evt);
            }
        });
        panelcoughs.add(btngoback2);
        btngoback2.setBounds(10, 320, 155, 40);

        jPanel1.add(panelcoughs, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 170, 400));

        panelsickness.setBackground(new java.awt.Color(255, 255, 255));
        panelsickness.setEnabled(false);
        panelsickness.setFocusable(false);
        panelsickness.setLayout(null);

        btncough.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btncough.setText("Cough");
        btncough.setActionCommand("");
        btncough.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncoughActionPerformed(evt);
            }
        });
        panelsickness.add(btncough);
        btncough.setBounds(10, 20, 155, 52);

        btnfever.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnfever.setText("Fever");
        btnfever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfeverActionPerformed(evt);
            }
        });
        panelsickness.add(btnfever);
        btnfever.setBounds(10, 90, 155, 52);

        btncold.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btncold.setText("Cold");
        btncold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncoldActionPerformed(evt);
            }
        });
        panelsickness.add(btncold);
        btncold.setBounds(10, 160, 155, 52);

        btngoback1.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btngoback1.setText("Go Back");
        btngoback1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngoback1ActionPerformed(evt);
            }
        });
        panelsickness.add(btngoback1);
        btngoback1.setBounds(10, 230, 155, 52);

        jPanel1.add(panelsickness, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 170, 400));

        panelfever.setBackground(new java.awt.Color(255, 255, 255));
        panelfever.setEnabled(false);
        panelfever.setFocusable(false);
        panelfever.setLayout(null);

        btnacute.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnacute.setLabel("Acute Fever");
        btnacute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnacuteActionPerformed(evt);
            }
        });
        panelfever.add(btnacute);
        btnacute.setBounds(10, 20, 155, 50);

        btnfuo.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnfuo.setText("<HTML> <BODY> <p align=center> Fever of </p><p align=center>Unkown Origin (FUO)</p></body><html>");
        btnfuo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfuoActionPerformed(evt);
            }
        });
        panelfever.add(btnfuo);
        btnfuo.setBounds(10, 260, 155, 50);

        btnrecurrent.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnrecurrent.setText("Recurrent Fever");
        btnrecurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrecurrentActionPerformed(evt);
            }
        });
        panelfever.add(btnrecurrent);
        btnrecurrent.setBounds(10, 140, 155, 50);

        btnlow.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnlow.setText("Low-grade Fever");
        btnlow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlowActionPerformed(evt);
            }
        });
        panelfever.add(btnlow);
        btnlow.setBounds(10, 200, 155, 50);

        btnpersistent.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnpersistent.setText("<HTML> <BODY> <p align=center> Persistent or </p><p align=center>Prolonged Fever</p></body><html>");
        btnpersistent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpersistentActionPerformed(evt);
            }
        });
        panelfever.add(btnpersistent);
        btnpersistent.setBounds(10, 80, 155, 50);

        btngoback3.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btngoback3.setText("Go Back");
        btngoback3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngoback3ActionPerformed(evt);
            }
        });
        panelfever.add(btngoback3);
        btngoback3.setBounds(10, 320, 155, 50);

        jPanel1.add(panelfever, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 170, 400));

        btnback.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/back.png"))); // NOI18N
        btnback.setBorder(null);
        btnback.setBorderPainted(false);
        btnback.setContentAreaFilled(false);
        btnback.setFocusPainted(false);
        btnback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnbackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnbackMouseExited(evt);
            }
        });
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        jPanel1.add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, 50, 50));

        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        jPanel1.add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 520, 160, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsendActionPerformed
        // SEND BUTTON - KUKUNIN LANG UNG ININPUT FROM TXTMESSAGE NA TEXTFIELD PARA MAPASTE SA SCREENTEXT(JTEXTAREA)
        answer = txtmsg.getText();
        screentext.append("\nYOU:     " +  answer + "\n");
        txtmsg.setText("");
         //IF ELSE NA PARA SA MGA POSSIBLE NA ITYPE NG USER SA TXTMESSAGE NA TEXTFIELD
        if (answer.equalsIgnoreCase("visiting policies")){
            screentext.append("HIRO:    Visitor's support is critical in a patient's healing\n"
                    + "             journey, and we welcome the presence of family\n"
                    + "             and friends. Patients with heart conditions,\n"
                    + "             especially those recovering in the Intensive\n"
                    + "             Care Unit, may have different visiting hours \n"
                    + "             and rules. While we encourage visitors, we ask \n"
                    + "             that they adhere to these rules so that our\n"
                    + "             patients can rest and recover.\n");
            screentext.append("HIRO:    Type below the policy you'd like to learn.\n"
                + "             Visiting 'TIME', 'AGE' of visitors, '\n"
                + "             NUMBER' of visitors, 'RESTRICTIONS'.\n");
        }
        // I-CALL MUNA UNG METHOD ex. policies PARA IBATO SAKANYA UNG ANSWER NI USER
        else if(answer.equalsIgnoreCase("TIME"))
                policies(answer);
        else if (answer.equalsIgnoreCase("NUMBER"))
                policies(answer);
        else if (answer.equalsIgnoreCase("AGE"))
                policies(answer);
        else if (answer.equalsIgnoreCase("RESTRICTIONS"))
                policies(answer);
        else if (answer.equalsIgnoreCase("GPs")|| answer.equalsIgnoreCase("General Practitioners")|| answer.equalsIgnoreCase("GP") || answer.equalsIgnoreCase("Practitioner"))
                doctors(answer="GPs");
        else if (answer.equalsIgnoreCase("Surgeon") || answer.equalsIgnoreCase("Surgeons"))
                doctors(answer="Surgeons");
        else if (answer.equalsIgnoreCase("Physician") || answer.equalsIgnoreCase("Physicians"))
                doctors(answer="Physicians");
        else if (answer.equalsIgnoreCase("Psychologists")|| answer.equalsIgnoreCase("Psychologist"))
                doctors(answer="Psychologists");
        else if (answer.equalsIgnoreCase("Psychiatrist")|| answer.equalsIgnoreCase("Psychiatrists"))
                doctors(answer="Psychiatrists");
        else if (answer.equalsIgnoreCase("Dentist") || answer.equalsIgnoreCase("Dentists"))
                doctors(answer="Dentists");
        else if (answer.equalsIgnoreCase("Optometrist")|| answer.equalsIgnoreCase("Optometrists"))
                doctors(answer="Optometrists");
        else if (answer.equalsIgnoreCase("Vet") || answer.equalsIgnoreCase("Veterinarian") || answer.equalsIgnoreCase("Veterinarians"))
                doctors(answer="Veterinarians");
        else if (answer.equalsIgnoreCase("Specialists") || answer.equalsIgnoreCase("Specialist"))
                doctors(answer="Specialists");
        else if (answer.equalsIgnoreCase("Radiologists") || answer.equalsIgnoreCase("Radiologist"))
                doctors(answer="Radiologists");
        else if (answer.equalsIgnoreCase("Cardiologists") || answer.equalsIgnoreCase("Cardiologist"))
                doctors(answer="Cardiologists");
        else if (answer.equalsIgnoreCase("Urologists") || answer.equalsIgnoreCase("Urologist"))
                doctors(answer="Urologists");
        else if (answer.equalsIgnoreCase("Neurologists") || answer.equalsIgnoreCase("Neurologist"))
                doctors(answer="Neurologists");
        else if (answer.equalsIgnoreCase("Dermatologists") || answer.equalsIgnoreCase("Dermatologist"))
                doctors(answer="Dermatologists");
        else if (answer.equalsIgnoreCase("Gastroenterologists") || answer.equalsIgnoreCase("Gastroenterologist"))
                doctors(answer="Gastroenterologists");
        else if (answer.equalsIgnoreCase("Anesthesiologists") || answer.equalsIgnoreCase("Anesthesiologist"))
                doctors(answer="Anesthesiologists");
        else if (answer.equalsIgnoreCase("Pediatrician") || answer.equalsIgnoreCase("Pediatricians"))
                doctors(answer="Pediatrician");
        else if (answer.equalsIgnoreCase("OB") || answer.equalsIgnoreCase("OB-GYNE") || answer.equalsIgnoreCase("OB-GYN") || answer.equalsIgnoreCase("Obstetrician-gynecologist"))
                doctors(answer="OB-GYN");
        else if (answer.equalsIgnoreCase("Types of Doctors"))
                doctors(answer="Types of Doctors");
        else{
                screentext.append("HIRO:    I have a hard time understanding\n"
                + "             what you mean. You can press the options on the\n"
                + "             right, or try typing something else.\n");
        }
           
    }//GEN-LAST:event_btnsendActionPerformed

    private void txtmsgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtmsgMouseClicked
        
    }//GEN-LAST:event_txtmsgMouseClicked

    private void txtmsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmsgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmsgActionPerformed

    private void txtmsgFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmsgFocusGained
        if (txtmsg.getText().equals("Send a Message...")){
            txtmsg.setText("");
        }
        txtmsg.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtmsgFocusGained

    private void txtmsgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmsgFocusLost
        if (txtmsg.getText().equals("")){
            txtmsg.setText("Send a Message...");
        }
        txtmsg.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtmsgFocusLost

    private void btnopenhoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopenhoursActionPerformed
        screentext.append("YOU:     Opening Hours.\n"
                + "HIRO:     We are open 24/7. This ensures\n"
                + "             that medical assistance is available at any\n"
                + "             time for urgent situations.\n");
        screentext.append("HIRO:    If you want to know about the hospital's\n"
                + "             visiting policies. Type VISITING POLICIES below.\n");
        
    }//GEN-LAST:event_btnopenhoursActionPerformed

    private void btnappointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnappointmentActionPerformed
        APPOINTMENT app = new APPOINTMENT();
        app.exitpanel.setVisible(false);
        app.yesnopanel.setVisible(false);
        app.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnappointmentActionPerformed

    private void btndoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndoctorsActionPerformed
        screentext.append("YOU:     Your Doctors.\n");
        screentext.append("HIRO:    We have different types of doctors BAYMAX\n"
                + "             Hospital. On the right side is the available\n"
                + "             doctors here in our hospital. Click one to\n"
                + "             view their contact information.\n"
                + "             Tips! If you type a specific type of doctor\n"
                + "             below, I can tell you what doctor they are for!\n"
                + "             Type 'TYPES OF DOCTORS' to see the options!\n");
        paneldoctortype.setVisible(true);
        panel1stQ.setVisible(false);
    }//GEN-LAST:event_btndoctorsActionPerformed

    private void btnlocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlocationActionPerformed
        screentext.append("YOU:     Location.\n");
        loc();
    }//GEN-LAST:event_btnlocationActionPerformed

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
      
    }//GEN-LAST:event_jPanel1MouseMoved

    private void btnacuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnacuteActionPerformed
        screentext.append("YOU:     Acute Fever.\n");
       ans ="Acute";
       fever(ans);
       panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(true);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnacuteActionPerformed

    private void btnfuoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfuoActionPerformed
        screentext.append("YOU:    Fever of unknown origin (FUO).\n");
       ans ="FUO";
       fever(ans);
       panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(true);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnfuoActionPerformed

    private void btncoughActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncoughActionPerformed
        screentext.append("YOU:      Coughs.\n"+
                "HIRO:     There are various types of cough, each \n"
                + "             with unique characteristics and potential\n"
                + "             underlying causes. Could you please specify\n"
                + "             the type of cough you are experiencing?\n");
        panelsickness.setVisible(false);
        panelcoughs.setVisible(true);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btncoughActionPerformed
    private void btnfeverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfeverActionPerformed
       screentext.append("YOU:     Fever.\n"+
                "HIRO:     There are different types of fever \n"
               + "             based on their duration and underlying\n"
               + "             causes. Which one are you experiencing?\n");
        panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(true);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnfeverActionPerformed

    private void btncoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncoldActionPerformed
       screentext.append("YOU:    Cold.\n");
      screentext.append("HIRO:    Here are some short remedies for a cold:\n"
                           + "            1. Rest and get plenty of sleep.\n"
                           + "            2. Stay hydrated by drinking fluids like water\n" 
                           + "            and herbal tea.\n"
                           + "            3. Use saline nasal rinses or sprays to\n"
                           + "            relieve congestion.\n" 
                           + "            4. Inhale steam from a hot shower or bowl\n"
                           + "            of hot water.\n"
                           + "            5. Gargle with warm saltwater to soothe\n"
                           + "            a sore throat.\n"
                           + "            6. Over-the-counter cold medications may\n"
                           + "            help alleviate symptoms.\n"
                           + "            7. Try honey and lemon in warm water or\n"
                           + "            tea for relief.\n"
                           + "            8. Use nasal strips to improve breathing.\n"
                           + "            Remember, if symptoms worsen or persist, consult\n"
                           + "            a healthcare professional.\n");
        screentext.append("HIRO:    Anything else you'd like to ask?\n");
        panelsickness.setVisible(true);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btncoldActionPerformed

    private void btndrycoughActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndrycoughActionPerformed
       screentext.append("YOU:      Dry Cough.\n");
       ans ="Dry Cough";
       coughs(ans);
       panelsickness.setVisible(false);
       panelcoughs.setVisible(true);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
       
    }//GEN-LAST:event_btndrycoughActionPerformed

    private void btnproductivecoughActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnproductivecoughActionPerformed
       screentext.append("YOU:     Productive Cough\n");
       ans ="Productive Cough";
       coughs(ans);
       panelsickness.setVisible(false);
       panelcoughs.setVisible(true);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnproductivecoughActionPerformed

    private void btnchronicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchronicActionPerformed
       screentext.append("YOU:     Chronic Cough.\n"
               + "              and recommend remedies to help alleviate it?\n");
       ans ="Chronic Cough";
       coughs(ans);
       panelsickness.setVisible(false);
       panelcoughs.setVisible(true);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
        
    }//GEN-LAST:event_btnchronicActionPerformed

    private void btnkeyfactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkeyfactsActionPerformed
        screentext.append("YOU:     Key Facts.\n"
                + "HIRO:     Let me know the sickness or medical condition\n"
                + "             you would like information on, and I'll be\n"
                + "             happy to assist you. Please choose from the\n"
                + "             options that I provided on the right side.\n");
        panelsickness.setVisible(true);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
        
        
    }//GEN-LAST:event_btnkeyfactsActionPerformed

    private void btnwetcoughActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnwetcoughActionPerformed
       screentext.append("YOU:     Wet Cough.\n");
       ans ="Wet Cough";
       coughs(ans);
       panelsickness.setVisible(false);
       panelcoughs.setVisible(true);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnwetcoughActionPerformed

    private void btnbarkingcoughActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbarkingcoughActionPerformed
       screentext.append("YOU:     Barking Cough.\n");
       ans ="Barking Cough";
       coughs(ans);
       panelsickness.setVisible(false);
        panelcoughs.setVisible(true);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnbarkingcoughActionPerformed

    private void btnwhoopingcoughActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnwhoopingcoughActionPerformed
        screentext.append("YOU:     Whooping Cough.\n");
       ans ="Whooping Cough";
       coughs(ans);
       panelsickness.setVisible(false);
        panelcoughs.setVisible(true);
        panel1stQ.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnwhoopingcoughActionPerformed

    private void btnrecurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrecurrentActionPerformed
        screentext.append("YOU:     Recurrent fever.\n");
       ans ="Recurrent";
       fever(ans);
       panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(true);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnrecurrentActionPerformed

    private void btnlowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlowActionPerformed
        screentext.append("YOU:     Low-grade fever.\n");
       ans ="Low";
       fever(ans);
       panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(true);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnlowActionPerformed

    private void btnpersistentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpersistentActionPerformed
        screentext.append("YOU:     Persistent or Prolonged fever.\n");
       ans ="Persistent";
       fever(ans);
       panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panel1stQ.setVisible(false);
        panelfever.setVisible(true);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnpersistentActionPerformed

    private void btnbackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbackMouseEntered
        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/backhover.png")));
    }//GEN-LAST:event_btnbackMouseEntered

    private void btnbackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbackMouseExited
        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/back.png")));
    }//GEN-LAST:event_btnbackMouseExited

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
       new START().setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    private void btngoback1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngoback1ActionPerformed
        panelsickness.setVisible(false);
        panel1stQ.setVisible(true);
        panelcoughs.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btngoback1ActionPerformed

    private void btngoback2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngoback2ActionPerformed
        panelsickness.setVisible(true);
        panel1stQ.setVisible(false);
        panelcoughs.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btngoback2ActionPerformed

    private void btngoback3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngoback3ActionPerformed
        panelsickness.setVisible(true);
        panel1stQ.setVisible(false);
        panelcoughs.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btngoback3ActionPerformed

    private void btnneuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnneuroActionPerformed
        screentext.append("YOU:     Neurologist.");
        screentext.append("\nHIRO:    Here is the list of the neurologists\n             in BAYMAX HOSPITAL.\n");
        ans= "neu";
        doctors(ans);
    }//GEN-LAST:event_btnneuroActionPerformed

    private void btnobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnobActionPerformed
        screentext.append("YOU:     OB-GYN.");
        screentext.append("\nHIRO:    Here is the list of the OB-GYNs in BAYMAX\n             HOSPITAL.\n");
        ans= "ob";
        doctors(ans);
    }//GEN-LAST:event_btnobActionPerformed

    private void btnpediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpediaActionPerformed
        screentext.append("YOU:     Pediatrician.");
        screentext.append("\nHIRO:    Here is the list of the pediatricians\n             in BAYMAX HOSPITAL.\n");
        ans= "ped";
        doctors(ans);
    }//GEN-LAST:event_btnpediaActionPerformed

    private void btndermaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndermaActionPerformed
        screentext.append("YOU:     Dermatologist.");
        screentext.append("\nHIRO:    Here is the list of the dermatologists\n             in BAYMAX HOSPITAL.\n");
        ans= "der";
        doctors(ans);
    }//GEN-LAST:event_btndermaActionPerformed

    private void btngoback4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngoback4ActionPerformed
        panel1stQ.setVisible(true);
        panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btngoback4ActionPerformed

    private void btnalldoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnalldoctorsActionPerformed
        screentext.append("YOU:     All Doctors.");
        screentext.append("\nHIRO:     Here is the list of all the doctors\n"
                + "             in BAYMAX HOSPITAL.\n");
        ans= "all";
        doctors(ans);
    }//GEN-LAST:event_btnalldoctorsActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        screentext.setText("HIRO:    Hi! What can I do for you?\n");
        panel1stQ.setVisible(true);
        panelsickness.setVisible(false);
        panelcoughs.setVisible(false);
        panelfever.setVisible(false);
        paneldoctortype.setVisible(false);
    }//GEN-LAST:event_btnclearActionPerformed

    public void coughs(String n){
        // METHOD TO FOR COUGHS. MAP GINAMIT PARA MAS MADALING I-CALL UNG SPECIFIC NA COUGH NA PININDOT FROM BUTTONS
        //IF YOU NOTICE SA METHOD NAGDECLARE NG (String n) DITO PAPASOK SAGOT NI USER.
        Map<String, String> cough = new HashMap<>();
        cough.put("Dry Cough", "HIRO:     Dry coughs are also known as a non-productive\n"
                + "             cough, a dry cough doesn't produce mucus \n"
                + "             or phlegm. It can be caused by irritation or \n"
                + "             inflammation in the throat, such as a viral \n"
                + "             infection, allergies, or exposure to irritants\n"
                + "             like smoke or dust.\n" 
                + "             To alleviate a dry cough, try these remedies: \n" 
                + "             1. Stay hydrated.\n"
                + "             2. Use honey in warm water or herbal tea \n"
                + "                (except for children under one year old).\n" 
                + "             3. Drink warm liquids like lemon water\n"
                + "                or ginger tea.\n" 
                + "             4. Use a humidifier or cool mist vaporizer.\n" 
                +"              5. Inhale steam from a hot shower or bowl \n"
                + "                of hot water (with caution).\n" 
                + "             6. Use throat lozenges or cough drops.\n" 
                + "             7. Avoid irritants like smoke and dust.\n" 
                + "             8. Rest and prioritize self-care.\n" 
                + "             Remember, consult a healthcare professional \n"
                + "             for proper diagnosis and treatment.\n");
        cough.put("Productive Cough", "HIRO:    Productive cough is a type of cough that \n"
                + "             produces mucus or phlegm, which may vary in\n"
                + "             color and consistency. It is often associated \n"
                + "             with respiratory infections such as the common\n"
                + "             cold, flu, or bronchitis. The color and consistency\n"
                + "             of the phlegm can provide clues about the\n"
                + "             underlying cause.\n"
                + "             To alleviate a productive cough:\n"
                +"              1. Stay hydrated.\n"
                + "             2. Inhale steam.\n"
                + "             3. Gargle with warm saltwater.\n"
                + "             4. Try honey and lemon.\n"
                + "             5. Consider expectorants (OTC).\n"
                + "             6. Use cough suppressants (with caution).\n"
                + "             7. Avoid irritants like smoke and dust.\n"
                + "             8. Elevate your head while sleeping.\n"
                + "             9. Rest and prioritize self-care.\n"
                + "             Consult a healthcare professional for proper\n"
                + "             diagnosis and treatment.\n");
        cough.put("Wet Cough", "HIRO:    A wet cough is characterized by the\n"
                + "             presence of excessive mucus or phlegm in the \n"
                + "             respiratory tract. It may sound gurgling or\n"
                + "             rattling, and can be caused by conditions such\n"
                + "             as bronchitis, pneumonia, or chronic obstructive\n"
                + "             pulmonary disease (COPD).\n" 
                + "             To alleviate a wet cough:\n" 
                + "             1. Stay hydrated.\n" 
                + "             2. Inhale steam.\n" 
                + "             3. Try warm saline gargles.\n" 
                + "             4. Consider expectorants (OTC).\n" 
                + "             5. Use honey and warm liquids.\n" 
                + "             6. Avoid irritants like smoke and dust.\n" 
                + "             7. Humidify the air.\n" 
                + "             8. Rest and prioritize self-care.\n" 
                + "             Consult a healthcare professional for \n"
                + "             proper diagnosis and treatment.\n");
        cough.put("Barking Cough","HIRO:    A barking cough is a harsh,\n"
                + "             dry cough that resembles the sound of a seal \n"
                + "             or a dog barking. It is often associated \n"
                + "             with croup, a viral infection that affects\n"
                + "             the upper airways, typically in children.\n" 
                + "             To alleviate a barking cough \n"
                + "             (associated with croup):\n" 
                + "             1. Provide humidified air.\n" 
                + "             2. Use a cool mist vaporizer.\n" 
                + "             3. Encourage fluids for hydration.\n" 
                + "             4. Keep calm and comfort the child.\n" 
                + "             5. Avoid irritants and cold air.\n" 
                + "             6. Consider over-the-counter cough\n"
                + "             medications (consult a professional).\n" 
                + "             7. Seek medical attention for severe or \n"
                + "             persistent symptoms.\n" 
                + "             Consult a healthcare professional for accurate\n"
                + "             diagnosis and personalized treatment.\n");
        cough.put("Whooping Cough","HIRO:    Whooping cough is also known as \n"
                + "             pertussis, whooping cough is a highly contagious\n"
                + "             bacterial infection characterized by severe\n"
                + "             coughing fits followed by a high-pitched intake\n"
                + "             of breath, producing a \"whooping\" sound. \n"
                + "             It is most common in infants and young children.\n" 
                + "             To manage whooping cough (pertussis):\n" 
                + "             1. Seek medical attention and follow prescribed\n"
                + "             treatment.\n" 
                + "             2. Rest and get adequate sleep.\n" 
                + "             3. Stay hydrated.\n" 
                + "             4. Use a humidifier or cool mist vaporizer.\n" 
                + "             5. Practice good hand hygiene.\n" 
                + "             6. Cover your mouth and nose when coughing or \n"
                + "             sneezing.\n" 
                + "             7. Consider supportive measures \n"
                + "             (consult a professional)\n" 
                + "             Consult a healthcare professional for accurate\n"
                + "             diagnosis, treatment, and guidance \n"
                + "             in managing whooping cough.\n");
        cough.put("Chronic Cough","HIRO:     A cough that lasts for\n"
                + "             more than eight weeks is considered chronic.\n"
                + "             It can be caused by various factors, including\n"
                + "             postnasal drip, asthma, gastroesophageal reflux\n"
                + "             disease (GERD), or side effects of certain\n"
                + "             medications.\n" 
                + "             To alleviate symptoms of a chronic cough:\n" 
                + "             1. Address underlying conditions with\n"
                + "             recommended treatment.\n" 
                + "             2. Stay hydrated.\n" 
                + "             3. Avoid irritants.\n" 
                + "             4. Elevate your head while sleeping.\n" 
                + "             5. Use a humidifier.\n" 
                + "             6. Practice good hygiene.\n" 
                + "             7. Avoid triggers for acid reflux.\n" 
                + "             8. Manage stress.\n" 
                + "             Consult a healthcare professional for accurate\n"
                + "             diagnosis and personalized treatment.\n");
       //UNG STRING NA KINUHA NATIN (String n) ETO NA YON.
       //IF n CONTAINS "sagot ni user" I-CACALL NIYA UNG NASA MAP NA KEY PARA ILABAS UNG VALUE
        if (n.contains("Dry Cough")){
            screentext.append(cough.get("Dry Cough"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(n.contains("Productive Cough")){
            screentext.append(cough.get("Productive Cough"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(n.contains("Wet Cough")){
            screentext.append(cough.get("Wet Cough"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(n.contains("Barking Cough")){
            screentext.append(cough.get("Barking Cough"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(n.contains("Whooping Cough")){
            screentext.append(cough.get("Whooping Cough"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(n.contains("Chronic Cough")){
            screentext.append(cough.get("Chronic Cough"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
    }         
    
    public void fever(String f){
        //FEVER METHOD. NAGINITIATE NG (String f).  DYAN ULIT PAPASOK SAGOT NI USER.
        Map<String, String> fever = new HashMap<>();
        fever.put("Acute","HIRO:     Acute fever is a short-term\n"
                + "             fever that typically lasts for a few days to a\n"
                + "             week and is often caused by infections such as \n"
                + "             the common cold or flu.\n" 
                + "             Remedy for acute fever:\n" 
                + "             - Rest and get plenty of sleep.\n" 
                + "             - Stay hydrated by drinking fluids.\n" 
                + "             - Take over-the-counter fever reducers like\n"
                + "                acetaminophen or ibuprofen.\n" 
                + "             - Use a cool compress or sponge bath to help \n"
                + "                reduce body temperature.\n" 
                + "             - Dress lightly and stay in a cool environment.\n" 
                + "             Note: Seek medical attention if the fever persists,\n"
                + "             worsens, or is accompanied by severe symptoms.\n");
        fever.put("Persistent","HIRO:      Persistent or prolonged fever\n"
                + "             refers to a fever that lasts for an extended\n"
                + "             period, usually more than a week, without a clear \n"
                + "             cause. It may indicate an underlying medical\n"
                + "             condition that requires further evaluation.\n" 
                + "             Remedy for persistent or prolonged fever:\n" 
                + "             - Seek medical attention to determine the\n"
                + "                underlying cause of the fever.\n" 
                + "             - Follow the prescribed treatment plan provided\n"
                + "                by a healthcare professional.\n" 
                + "             - Take prescribed medications, such as antibiotics\n"
                + "                or antiviral drugs, as directed.\n" 
                + "             - Rest and stay hydrated.\n" 
                + "             - Use over-the-counter fever reducers to manage\n"
                + "                symptoms, if recommended by a healthcare\n"
                + "                professional.\n" 
                + "             - Maintain good hygiene and practice proper\n"
                + "                infection control measures.\n" 
                + "             - Monitor the fever closely and seek medical\n"
                + "                advice if it persists or worsens.\n" 
                + "             Note: Persistent or prolonged fever may be a\n"
                + "             sign of a more serious underlying condition and\n"
                + "             should be evaluated by a healthcare professional.\n");
        fever.put("Recurrent","HIRO:     Recurrent fever is a type of fever is \n"
                + "             characterized by episodes of fever that occur at\n"
                + "             regular intervals, followed by periods of normal \n"
                + "             body temperature. It can be associated with \n"
                + "             various conditions, including certain infections\n"
                + "             or inflammatory disorders.\n" 
                + "             Remedy for recurrent fever:\n" 
                + "             - Consult a healthcare professional to determine\n"
                + "               the cause of the recurrent fever.\n" 
                + "             - Follow the recommended treatment plan for \n"
                + "               the underlying condition.\n" 
                + "             - Take prescribed medications as directed.\n" 
                + "             - Maintain good hygiene and practice proper\n"
                + "               infection control measures.\n" 
                + "             - Stay hydrated and get plenty of rest.\n" 
                + "             - Manage stress levels and practice \n"
                + "               stress-reducing activities.\n" 
                + "             - Consider lifestyle modifications, such as a\n"
                + "               healthy diet and regular exercise, to support \n"
                + "               overall immune health.\n" 
                + "             - Monitor the fever closely and seek medical\n"
                + "               advice if it recurs or persists.\n" 
                +"              Note: Recurrent fever can be a symptom of\n"
                + "             an underlying health issue and should be\n"
                + "             evaluated by a healthcare professional for\n"
                + "             proper diagnosis and treatment.\n");
        fever.put("Low","HIRO:     Low-grade fever refers to a mild\n"
                + "             increase in body temperature, usually ranging \n"
                + "             from 99°F (37.2°C) to 100.4°F (38°C). It can be\n"
                + "             caused by minor infections or underlying \n"
                + "             inflammatory conditions.\n" 
                + "             Remedy for low-grade fever:\n" 
                + "             - Rest and get plenty of sleep to support \n"
                + "               your body's healing process.\n" 
                + "             - Stay hydrated by drinking plenty of fluids,\n"
                + "               such as water, herbal tea, or clear broth.\n" 
                + "             - Use over-the-counter fever reducers like\n"
                + "               acetaminophen or ibuprofen, following the \n"
                + "               recommended dosage instructions.\n" 
                + "             - Apply a cool compress to your forehead\n"
                + "               or take a lukewarm bath to help reduce \n"
                + "               body temperature.\n" 
                + "             - Dress lightly and stay in a cool,\n"
                + "               comfortable environment.\n" 
                + "             - Monitor your temperature and seek medical\n"
                + "               attention if the fever persists, worsens,\n"
                + "               or is accompanied by severe symptoms.\n" 
                + "             Note: Low-grade fever is typically a mild \n"
                + "             symptom and often resolves on its own. \n"
                + "             However, if you have concerns or the fever\n"
                + "             persists for an extended period, it's best \n"
                + "             to consult a healthcare professional for \n"
                + "             further evaluation.\n");
        fever.put("FUO","HIRO:    Fever of unknown origin (FUO): \n"
                + "             This term is used when the cause of a \n"
                + "             persistent fever remains unknown despite \n"
                + "             extensive medical evaluation.\n" 
                + "             Remedy for Fever of Unknown Origin (FUO):\n" 
                + "             - Seek medical attention for a comprehensive\n"
                + "               evaluation.\n" 
                + "             - Follow the diagnostic process and take \n"
                + "               prescribed medications.\n" 
                + "             - Use over-the-counter fever reducers as directed.\n" 
                + "             - Stay hydrated, rest, and maintain a healthy \n"
                + "               lifestyle.\n" 
                + "             - Keep a record of symptoms and follow up with\n"
                + "               the healthcare provider.\n" 
                + "             Note: It's important to note that fever is not \n"
                + "             a specific illness but rather a symptom of an \n"
                + "`            underlying condition. If you or someone you \n"
                + "             know has a fever, it's important to consult a\n"
                + "             healthcare professional for proper evaluation,\n"
                + "             diagnosis, and appropriate treatment.\n");
        
        //I THINK GETS NIYO NA TO. UNG SAGOT NI USER, DITO MAPUPUNTA PARA MAPRINT UNG VALUES FROM THE KEYS SA MAP
        if (f.contains("Acute")){
            screentext.append(fever.get("Acute"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(f.contains("Persistent")){
            screentext.append(fever.get("Persistent"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(f.contains("Recurrent")){
            screentext.append(fever.get("Recurrent"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(f.contains("Low")){
            screentext.append(fever.get("Low"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
        else if(f.contains("FUO")){
            screentext.append(fever.get("FUO"));
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
    }
    
    public void loc(){
        //METHOD LOC. TREESET GINAMIT PARA MAG-ALPHABETICAL UNG LOCATIONS
        Set <String> loca = new TreeSet<>();
        loca.add("             BAYMAX Hospital Manila\n"
                + "             Address: Metro Manila\n"
                + "             Tel no.: 231-9876   Mobile No.: 09126789532\n\n");
        loca.add("             Las Pinas BAYMAX Hospital\n"
                + "             Address: Las Pinas, Metro Manila\n"
                + "             Tel no.: 987-2342   Mobile No.: 09276543243\n\n");
        loca.add("             Mindoro BAYMAX Hospital\n"
                + "             Address: Mindoro\n"
                + "             Tel no.: 987-2342   Mobile No.: 09276543243\n\n");
        loca.add("             Kawit BAYMAX Hospital\n"
                + "             Address: Kawit, Cavite\n"
                + "             Tel no.: 645-9988   Mobile No.: 09887766554\n\n");
        loca.add("             Sorsogon BAYMAX Hospital\n"
                + "             Address: Sorsogon, Visayas\n"
                + "             Tel no.: 888-3462   Mobile No.: 09772517833\n\n");
        loca.add("             Davao BAYMAX Hospital\n"
                + "             Address: Davao City, Mindanao\n"
                + "             Tel no.: 123-5634   Mobile No.: 09844443212\n\n");
       
        screentext.append("HIRO:    Here are our Branches for BAYMAX Hospital.\n");
        //ITERATOR GINAMIT. PARA MAPRINT ISA ISA UNG LAMAN NG LOCATION.
        Iterator<String> it = loca.iterator();
            while(it.hasNext()) {
                screentext.append(it.next());
            }
            screentext.append("HIRO:    Anything else you'd like to ask?\n");
        }
    
    public void policies(String p){
        //METHOD POLICIES. (String p) - MAP ULIT PARA MADALI I-CALL UNG ININPUT NG USER.
        Map<String,String> poli = new HashMap();
            poli.put("TIME","HIRO:    Visiting time shall be as follows:\n" 
                    + "             Non-Critical Areas\n" 
                    + "                 10:00 a.m. - 1:00 p.m.\n" 
                    + "                 5:00 p.m. - 9:00 p.m.\n\n" 
                    + "             All Medical Intensive Care Units\n" 
                    + "                 10:00 a.m. - 1:00 p.m.\n" 
                    + "                 5:00 p.m. - 9:00 p.m.\n\n" 
                    + "             All Surgical Intensive Care Units\n"
                    + "             (Adult and Pedia)\n" 
                    + "                 8:00 a.m. - 9:00 a.m.\n" 
                    + "                 12:00 noon - 1:00 p.m.\n" 
                    + "                 6:00 pm. - 8:00 p.m.\n\n" 
                    + "             Pediatric Intensive Care Unit ONLY\n" 
                    + "                 10:00 a.m. - 1:00 p.m.\n" 
                    + "                 5:00 p.m. - 9:00 p.m.\n");
            poli.put("AGE","HIRO:    Children below 7 years old are not allowed,\n"
                    + "             however, if there is a request from the\n"
                    + "             patient, they maybe allowed provided there\n"
                    + "             is proper coordination of the nurse on\n"
                    + "             duty with the attending physician, charge\n"
                    + "             nurse/headnurse, nurse supervisor on duty\n"
                    + "             (NSOD) and guard on duty. Children should\n"
                    + "             be primed by the family on what to expect\n"
                    + "             to see and must be supervised at all times\n"
                    + "             by a responsible adult who is not the patient.\n");
            poli.put("NUMBER", "HIRO:    It is usually best to limit visitors to two (2)\n"
                    + "             at a time, to respect the comfort of all our \n"
                    + "             patients. The hospital cafeteria is a pleasant\n"
                    + "             area to wait if too many visitors arrive together.\n"
                    + "             We encourage families to discuss scheduling\n"
                    + "             their visits, in order not to overwhelm the\n"
                    + "             patient by visiting all at one time. While\n"
                    + "             support from loved ones is important, we\n"
                    + "             also ask that visitors respect the patient's\n"
                    + "             need for rest during their recovery. Discuss\n"
                    + "             any unusual visiting circumstances with the\n"
                    + "             patient's nurse, so that the health care team\n"
                    + "             might accommodate any special arrangements\n"
                    + "             based on the patient's specific situation.\n");
            poli.put("RESTRICTIONS", "HIRO:    Restrictions are strictly applied for the safety \n"
                    + "             of all patients and visitors.\n"
                    + "             - Any visitor exposed to or having a \n"
                    + "               communicable disease (tuberculosis, \n"
                    + "               measles, mumps, rubella, pertussis, flu\n"
                    + "               or a cold, cough) should not visit\n"
                    + "               patients.\n"
                    + "             - Smoking and drinking alcoholic beverages are\n"
                    + "               strictly prohibited in all areas of \n"
                    + "               the hospital.\n"
                    + "             - The use of cellular phones is prohibited where\n"
                    + "               critical medical equipment is in operation and\n"
                    + "               within six feet of any electronic patient care\n"
                    + "               equipment. If you must use your cellular phone,\n"
                    + "               please speak in a low voice so as not to \n"
                    + "               disturb others.\n"
                    + "             - For security reason, all firearms must be\n"
                    + "               deposited at the security guard before\n"
                    + "               entering the hospital premises.\n");
            //if p ay naglalaman ng TIME, CALL UNG VALUE NG TIME GALING SA MAP THEN PRINT
            if (p.equalsIgnoreCase("TIME"))
                screentext.append(poli.get("TIME") + "\nHIRO:    Other Visiting Policies: 'AGE' of visitors,\n"
                        + "             'NUMBER' of visitors, 'RESTRICTIONS'.\n"
                        + "             Is there anything else you'd like to know?\n");
            else if (p.equalsIgnoreCase("AGE"))
                screentext.append(poli.get("AGE") + "\nHIRO:    Other Visiting Policies: Visiting 'TIME',\n"
                        + "             'NUMBER' of visitors, 'RESTRICTIONS'.\n"
                        + "             Is there anything else you'd like to know?\n");
            else if (p.equalsIgnoreCase("NUMBER"))
                screentext.append(poli.get("NUMBER") + "\nHIRO:    Other Visiting Policies: Visiting 'TIME',\n"
                        + "             'AGE' of visitors, 'RESTRICTIONS'.\n"
                        + "             Is there anything else you'd like to know?\n");
            else if (p.equalsIgnoreCase("RESTRICTIONS"))
                screentext.append(poli.get("RESTRICTIONS") + "\nHIRO:    Other Visiting Policies: Visiting 'TIME',\n"
                        + "             'AGE' of visitors, 'NUMBER' of visitors.\n"
                        + "             Is there anything else you'd like to know?\n");
            
    }
    
    public void doctors(String a){
        //METHOD DOCTORS. (String a). SET GINAMIT PARA MAKUHA UNG UNION. INDIVIDUAL DOCTOR SET TO KAYA APAT SIYA.
        Set<String> neuro = new LinkedHashSet();
        Set<String> pedia = new LinkedHashSet();
        Set<String> derma = new LinkedHashSet();
        Set<String> ob = new LinkedHashSet();
        
        Collections.addAll(neuro,"Dr. Joshua Maverick\n             Contact No.: 09123456789\n             E-mail Address: joshmaverick@yahoo.com\n             BAYMAX Mindoro Branch\n",
                "Dr. Johanna Marie Pascual\n             Contact No.: 09987654321\n             E-mail Address: JMPascual@gmail.com\n             BAYMAX Las Pinas Branch\n",
                "Dr. Rojan Padilla\n             Contact No.: 09875761234\n             E-mail Address: rojanpadilla@hotmail.com\n             BAYMAX Kawit, Cavite Branch\n",
                "Dr. Huldrych Gil\n             Contact No.: 09432346578\n             E-mail Address: huldgil@gmail.com\n             BAYMAX Davao City Branch\n",
                "Dr. Julius Zamora\n             Contact No.: 099456786764\n             E-mail Address: jullibells@gmail.com\n             BAYMAX Metro Manila Branch\n",
                "Dr. Veronica Rivera\n             Contact No.:09154368459\n             E-mail Address: ronica.rivera@gmail.com\n             BAYMAX Sorsogon Branch\n");
        Collections.addAll(pedia, "Dr. Kobe Bryant\n             Contact No.: 09563748291\n             E-mail Address: bryant.kobe123@yahoo.com\n             BAYMAX Mindoro Branch\n",
                "Dr. Mark Ian Bariles\n             Contact No.: 09527374921\n             E-mail Address: ianbariles27@gmail.com\n             BAYMAX Las Pinas Branch\n",
                "Dr. Alex Quinto\n             Contact No.: 09373920462\n             E-mail Address: lexquinto56@hotmail.com\n             BAYMAX Kawit, Cavite Branch\n",
                "Dr. Jill Valentine\n             Contact No.: 09271936482\n             E-mail Address: valentine.jill@gmail.com\n             BAYMAX Davao City Branch\n",
                "Dr. Chris Redfield\n             Contact No.: 09562492810\n             E-mail Address: chrisredfield10@gmail.com\n             BAYMAX Metro Manila Branch\n",
                "Dr. Leon Kennedy\n             Contact No.:09264829104\n             E-mail Address:leonkennedy24@gmail.com\n             BAYMAX Sorsogon Branch\n");
        Collections.addAll(derma, "Dr. Albert Wesker\n             Contact No.: 09193729101\n             E-mail Address: weskeralbert@yahoo.com\n             BAYMAX Mindoro Branch\n" ,        
                "Dr. Carlos Oliveira\n             Contact No.: 09728392611\n             E-mail Address: carlosoliveira_70@gmail.com\n             BAYMAX Las Pinas Branch\n",
                "Dr. Rebecca Chambers\n             Contact No.: 09738191037\n             E-mail Address: chambers_23@hotmail.com\n             BAYMAX Kawit, Cavite Branch\n" ,
                "Dr. Nemesis Dela Cruz\n             Contact No.: 09362311022\n             E-mail Address: DelaCruz_Nemesis@gmail.com\n             BAYMAX Davao City Branch\n" ,
                "Dr. Angel Sia\n             Contact No.: 09264810161\n             E-mail Address: AngelSia000@gmail.com\n             BAYMAX Metro Manila Branch\n" ,
                "Dr. Leo Poole\n             Contact No.:09927468183\n             E-mail Address:leo.poole26@gmail.com\n             BAYMAX Sorsogon Branch\n");
        Collections.addAll(ob, "Dr. Jhonrey Guevarra\n             Contact No.: 09562838017\n             E-mail Address: guevarra.jr22@yahoo.com\n             BAYMAX Mindoro Branch\n",
                "Dr. Justin Cama\n             Contact No.: 09273940163\n             E-mail Address: cama_justin70@gmail.com\n             BAYMAX Las Pinas Branch\n",
                "Dr. Paul Banogon\n             Contact No.: 09362910361\n             E-mail Address: banogon.paul011@hotmail.com\n             BAYMAX Kawit, Cavite Branch\n",
                "Dr. Jelixces Alcantara\n             Contact No.: 09263819263\n             E-mail Address: Alcantarajelixces.56@gmail.com\n             BAYMAX Davao City Branch\n",
                "Dr. Ken Barlis\n             Contact No.: 09264618193\n             E-mail Address: kenbarlis0025@gmail.com\n             BAYMAX Metro Manila Branch\n",
                "Dr. Allyson Ford\n             Contact No.:09263920263\n             E-mail Address:allyson.ford129@gmail.com\n             BAYMAX Sorsogon Branch\n");
        //ETO NA UNG UNION NA OPERATION. THIS ADDS ALL THE FOUR SETS INTO ONE.
        Set<String> all = new LinkedHashSet();
        all.addAll(neuro);
        all.addAll(pedia);
        all.addAll(derma);
        all.addAll(ob);
        
        //TREE MAP PARA SA MGA EXTRA INFORMATION SA DOCTORS
        Map <String,String> trivias = new TreeMap<>();
        
        trivias.put("GPs", "HIRO:    General practitioners (GPs) are doctors who are\n"
                + "             trained to diagnose and treat a wide range of\n"
                + "             health problems. They can offer routine\n"
                + "             check-ups, prescribe medications, and refer \n"
                + "             patients to specialists if needed.\n");
        trivias.put("Surgeons", "HIRO:    Surgeons are specialized doctors who perform\n"
                + "             surgical procedures. They might specialize in a\n"
                + "             specific procedure, such as cardiac surgery, or\n"
                + "             a particular body part, such as orthopedics.\n");
        trivias.put("Physicians", "HIRO:    Physicians, also known as doctors of medicine,\n"
                + "             have completed four years of medical school and\n"
                + "             a residency program. They offer general medical\n"
                + "             care and can diagnose, treat, and manage a\n"
                + "             broad range of medical conditions.\n");
        trivias.put("Psychologists", "HIRO:    Psychologists are mental health professionals\n"
                + "             trained in psychology and therapy who specialize\n"
                + "             in understanding, diagnosing, and treating\n"
                + "             emotional, behavioral, and mental health issues.\n");
        trivias.put("Psychiatrists","HIRO:    Psychiatrists are medical doctors who\n"
                + "             have completed four years of medical school and\n"
                + "             a residency program in psychiatry. They\n"
                + "             specialize in treating mental health conditions,\n"
                + "             including depression, anxiety, and psychosis,\n"
                + "             and can prescribe medication.\n");
        trivias.put("Dentists", "HIRO:    Dentists are dental specialists who are\n"
                + "             responsible for diagnosing, treating, and\n"
                + "             preventing dental diseases and conditions.\n");
        trivias.put("Optometrists","HIRO:    Optometrists are eye specialists\n"
                + "             who diagnose and treat common eye conditions,\n"
                + "             such as myopia, astigmatism, and cataracts.\n");
        trivias.put("Veterinarians", "HIRO:    Veterinarians are specialized doctors who\n"
                + "             treat animals. They may specialize in a\n"
                + "             particular species, such as dogs or cats, or\n"
                + "             in a particular field, such as radiology or\n"
                + "             surgery.\n");
        trivias.put("Specialists", "HIRO:    Specialists are doctors who have additional\n"
                + "             training and expertise in a particular medical\n"
                + "             field, such as cardiology, dermatology,\n"
                + "             gastroenterology, and more. They focus on a\n"
                + "             specific area of medicine and are often called\n"
                + "             upon for more complex cases.\n");
        trivias.put("Radiologists", "HIRO:    Radiologists are medical doctors who\n"
                + "             specialize in the diagnosis and treatment of\n"
                + "             medical conditions using medical imaging such as\n"
                + "             X-rays, CT scans, MRI scans, and ultrasound.\n");
        trivias.put("Cardiologists","HIRO:    Cardiologists are medical specialists\n"
                + "             who focus on the diagnosis and treatment of heart\n"
                + "             and blood vessel disorders. They diagnose and\n"
                + "             treat heart failure, heart rhythm disorders,\n"
                + "             coronary artery disease, and valve problems.\n");
        trivias.put("Urologists","HIRO:    They are medical specialists who treat\n"
                + "             diseases and conditions of the urinary tract,\n"
                + "             male reproductive system, and adjacent areas\n"
                + "             of the body.\n");
        trivias.put("Neurologists","HIRO:    Neurologists are medical specialists who diagnose\n"
                + "             and treat conditions that affect the brain,\n"
                + "             spinal cord, and peripheral nerves. Neurologists\n"
                + "             diagnose and treat various conditions such as \n"
                + "             epilepsy, stroke, Parkinson's disease, multiple\n"
                + "             sclerosis,and headaches.\n");
        trivias.put("Dermatologists", "HIRO:    Dermatologists are medical specialists who\n"
                + "             diagnose and treat skin, hair, and nail\n"
                + "             problems.\n");
        trivias.put("Gastroenterologists", "HIRO:     Gastroenterologists are medical specialists\n"
                + "             who diagnose and treat diseases of the digestive\n"
                + "             system. They diagnose and treat various problems\n"
                + "             ranging from bloating and constipation to liver\n"
                + "             disease, and they perform colonoscopy and \n"
                + "             endoscopy.\n");
        trivias.put("Anesthesiologists", "HIRO:    Anesthesiologists are medical specialists\n"
                + "             who diagnose and treat conditions that require\n"
                + "             anesthesia and sedation during medical\n"
                + "             procedures. They diagnose and treat various\n"
                + "             conditions such as respiratory and cardiac\n"
                + "             problems and pain management.\n");
        trivias.put("Pediatrician", "HIRO:    Pediatricians are medical specialists \n"
                + "             who work with children and adolescents, from \n"
                + "             birth to their late teens. Pediatricians\n"
                + "             diagnose and treat various childhood conditions,\n"
                + "             such as infections, allergies, skin problems,\n"
                + "             and growth and development issues.\n");
        trivias.put("OB-GYN", "HIRO:    Obstetrician-gynecologist (OB-GYN) are medical\n"
                + "             specialists who work with women's reproductive\n"
                + "             systems and health. Their expertise includes\n"
                + "             pregnancy and childbirth, infertility,\n"
                + "             reproductive system disorders, and gynecological\n"
                + "             exams and cancer screening. OB-GYNs may also\n"
                + "             provide care during menopause.\n");
        //NAG FOR-LOOP PARA MAPRINT UNG SPECIFIC DOCTOR SET, KUNG ANO MAN PINILI NI USER.
        if(a.contains("neu")){
            screentext.append(trivias.get("Neurologists"));
            for (String n: neuro){
                screentext.append("             " + n +"\n");
            }
        }else if(a.contains("ped")){
            screentext.append(trivias.get("Pediatrician"));
            for (String p: pedia){
                screentext.append("             " + p +"\n");
            }
        }else if(a.contains("der")){
            screentext.append(trivias.get("Dermatologists"));
            for (String d: derma){
                screentext.append("             " + d +"\n");
            }
        }else if(a.contains("ob")){
            screentext.append(trivias.get("OB-GYN"));
            for (String o: ob){
                screentext.append("             " + o +"\n");
            }
        }
        else if(a.contains("all")){
            for (String p: all){
                screentext.append("             " + p +"\n");
            }
        }
        else if(a.contains("GPs")){
            screentext.append(trivias.get("GPs"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Surgeons")){
            screentext.append(trivias.get("Surgeons"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Physicians")){
            screentext.append(trivias.get("Physicians"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Psychologists")){
            screentext.append(trivias.get("Psychologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Psychiatrists")){
            screentext.append(trivias.get("Psychiatrists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Dentists")){
            screentext.append(trivias.get("Dentists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Optometrists")){
            screentext.append(trivias.get("Optometrists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Veterinarians")){
            screentext.append(trivias.get("Veterinarians"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Specialists")){
            screentext.append(trivias.get("Specialists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Cardiologists")){
            screentext.append(trivias.get("Cardiologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Radiologists")){
            screentext.append(trivias.get("Radiologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Urologists")){
            screentext.append(trivias.get("Urologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Neurologists")){
            screentext.append(trivias.get("Neurologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Dermatologists")){
            screentext.append(trivias.get("Dermatologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Gastroenterologists")){
            screentext.append(trivias.get("Gastroenterologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Anesthesiologists")){
            screentext.append(trivias.get("Anesthesiologists"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Pediatrician")){
            screentext.append(trivias.get("Pediatrician"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("OB-GYN")){
            screentext.append(trivias.get("OB-GYN"));
            screentext.append("HIRO:    Is there anything else you'd like to know?");
        }
        else if(a.contains("Types of Doctors")){
            screentext.append("HIRO:    Doctors that I can give you information on are:");
        for (String docs : trivias.keySet()) 
            screentext.append("\n             "+docs);
        screentext.append("\nHIRO:    Which one would you like to know about?");
        }
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>
          
        /* Create and display the form */
        CHATBOT chatbot = new CHATBOT();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                chatbot.setVisible(true);
                panelsickness.setVisible(false);
                panelcoughs.setVisible(false);
                panel1stQ.setVisible(true);
                panelfever.setVisible(false);
                paneldoctortype.setVisible(false);
            }
        });
       
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnacute;
    private javax.swing.JButton btnalldoctors;
    private javax.swing.JButton btnappointment;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnbarkingcough;
    private javax.swing.JButton btnchronic;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btncold;
    private javax.swing.JButton btncough;
    private javax.swing.JButton btnderma;
    private javax.swing.JButton btndoctors;
    private javax.swing.JButton btndrycough;
    private javax.swing.JButton btnfever;
    private javax.swing.JButton btnfuo;
    private javax.swing.JButton btngoback1;
    private javax.swing.JButton btngoback2;
    private javax.swing.JButton btngoback3;
    private javax.swing.JButton btngoback4;
    private javax.swing.JButton btnkeyfacts;
    private javax.swing.JButton btnlocation;
    private javax.swing.JButton btnlow;
    private javax.swing.JButton btnneuro;
    private javax.swing.JButton btnob;
    private javax.swing.JButton btnopenhours;
    private javax.swing.JButton btnpedia;
    private javax.swing.JButton btnpersistent;
    private javax.swing.JButton btnproductivecough;
    private javax.swing.JButton btnrecurrent;
    private javax.swing.JButton btnsend;
    private javax.swing.JButton btnwetcough;
    private javax.swing.JButton btnwhoopingcough;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JPanel panel1stQ;
    public static javax.swing.JPanel panelcoughs;
    public static javax.swing.JPanel paneldoctortype;
    public static javax.swing.JPanel panelfever;
    public static javax.swing.JPanel panelsickness;
    private static javax.swing.JTextArea screentext;
    private javax.swing.JTextField txtmsg;
    // End of variables declaration//GEN-END:variables
}
